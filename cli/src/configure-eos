#!/bin/bash
set -eu

function usage {
  echo "\
Usage: Usage: $0 [options] component

Configures eos services either on remote host or locally for a component
among {cluster,eoscore,haproxy,release,s3client,s3server,sspl}
if hostname is not specified.

Options:
    -d,  --show-file-format     show moduleâ€™s config file contents
    -F,  --ssh-config FILE      alternative path to ssh configuration file
    -h,  --help                 print this help and exit
    -r,  --remote user@IP       remote execution
    -s,  --sudo                 use sudo
    -u,  --file FILE            update component pillar data 
"
}


function parse_args() {
    set -eu

    # Note. this mostly based on https://stackoverflow.com/a/29754866

    ! getopt --test > /dev/null
    if [[ ${PIPESTATUS[0]} -ne 4 ]]; then
        echo 'Error: getopt is not functional (`getopt --test` failed).'
        exit 1
    fi
    OPTIONS=dsu:hF:r:
    LONGOPTS=show-file-format,sudo,file:,help,ssh-config:,remote:

    ! PARSED=$(getopt --options=$OPTIONS --longoptions=$LONGOPTS --name "$0" -- "$@")
    if [[ ${PIPESTATUS[0]} -ne 0 ]]; then
        exit 2
    fi

    eval set -- "$PARSED"
    while true; do
        case "$1" in
            -d|--show-file-format)
                show_file=true
                shift
                ;;
            -s|--sudo)
                sudo=sudo
                shift
                ;;
            -u|--file)
                update_file=true
                file_path=$2
                if [[ ! -f "$file_path" ]]; then
                    echo "ERROR: '$file_path' not a file"
                    exit 2
                fi
                shift 2
                ;;
            -h|--help)
                usage
                exit 0
                ;;
            -F|--ssh-config)
                ssh_config="$2"
                if [[ ! -f "$ssh_config" ]]; then
                    echo "ERROR: '$ssh_config' not a file"
                    exit 2
                fi
                shift 2
                ;;
            -r|--remote)
                host="$2"
                if [[ -z $host ]]; then
                    echo "ERROR: host@ip not specified"
                    exit 2 
                fi
                shift 2
                ;;
            --)
                shift
                break
                ;;
            *)
                echo "Programming error"
                exit 3
                ;;
        esac
    done
    
    if [[ $# -eq 1 ]]; then
        component=$1
        components=("cluster" "eoscore" "haproxy" "release" "s3client" "s3server" "sspl")
        if [[ ! " ${components[@]} " =~ " ${component} " ]]; then
            echo "ERROR: Invalid component type"
            exit 2
        fi
    else
        echo "$0: Inappropriate arguments provided: $@"
        usage
        exit 4
    fi

}

# parse args
show_file=false
update_file=false
component= 
file_path= 
host= 
ssh_config= 
sudo=

parse_args "$@"

cmd="$sudo"
if [[ -n "$host" ]]; then

    if [[ -n "$ssh_config" ]]; then
        ssh_config="-F $ssh_config"
    fi

    if [[ -n "$sudo" ]]; then
        ssh_config="-t $ssh_config"
    fi

    cmd="ssh $ssh_config $host $cmd"
    if [[ -f "$file_path" ]]; then 
        $(scp $file_path ${host}:/tmp/${component}.sls $ssh_config)
        file_path="/tmp/${component}.sls"
    fi
fi

if $show_file ; then
    echo "$($cmd python3.6 /opt/seagate/ees-prvsnr/utils/configure-eos.py ${component} --show-${component}-file-format)"
elif  $update_file ; then
    echo "$($cmd python3.6 /opt/seagate/ees-prvsnr/utils/configure-eos.py ${component} --${component}-file $file_path)"
fi

